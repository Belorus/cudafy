<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.0.4106.18924" Name="ComplexNumbersF" HasCudaSourceCode="true" HasPTX="true">
  <CudaSourceCode>I2luY2x1ZGUgPGN1Q29tcGxleC5oPg0KDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleEFkZChjdUZsb2F0Q29tcGxleCAgKmEsIGludCBhTGVuWCwgaW50IGFMZW5ZLCBjdUZsb2F0Q29tcGxleCAgKmIsIGludCBiTGVuWCwgaW50IGJMZW5ZLCBjdUZsb2F0Q29tcGxleCAgKmMsIGludCBjTGVuWCwgaW50IGNMZW5ZKTsNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4U3ViKGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpOw0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgIGNvbXBsZXhNcHkoY3VGbG9hdENvbXBsZXggICphLCBpbnQgYUxlblgsIGludCBhTGVuWSwgY3VGbG9hdENvbXBsZXggICpiLCBpbnQgYkxlblgsIGludCBiTGVuWSwgY3VGbG9hdENvbXBsZXggICpjLCBpbnQgY0xlblgsIGludCBjTGVuWSk7DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleERpdihjdUZsb2F0Q29tcGxleCAgKmEsIGludCBhTGVuWCwgaW50IGFMZW5ZLCBjdUZsb2F0Q29tcGxleCAgKmIsIGludCBiTGVuWCwgaW50IGJMZW5ZLCBjdUZsb2F0Q29tcGxleCAgKmMsIGludCBjTGVuWCwgaW50IGNMZW5ZKTsNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4QWJzKGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpOw0KDQoNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4QWRkKGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldID0gY3VDYWRkZihhW3ggKiBhTGVuWSArIGldLCBiW3ggKiBiTGVuWSArIGldKTsNCn0NCn0NCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4U3ViKGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldID0gY3VDc3ViZihhW3ggKiBhTGVuWSArIGldLCBiW3ggKiBiTGVuWSArIGldKTsNCn0NCn0NCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4TXB5KGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldID0gY3VDbXVsZihhW3ggKiBhTGVuWSArIGldLCBiW3ggKiBiTGVuWSArIGldKTsNCn0NCn0NCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4RGl2KGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldID0gY3VDZGl2ZihhW3ggKiBhTGVuWSArIGldLCBiW3ggKiBiTGVuWSArIGldKTsNCn0NCn0NCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4QWJzKGN1RmxvYXRDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RmxvYXRDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KaW50ICBudW0yID0gMDsNCmZsb2F0ICBudW0zID0gMTsNCmZsb2F0ICBudW00ID0gMjsNCmN1RmxvYXRDb21wbGV4ICB4ZiA9IG1ha2VfY3VGbG9hdENvbXBsZXgoKDMgKyBudW0zKSwgKDcgKyBudW00KSk7DQp3aGlsZSAoKG51bTIgPCAweDEwMCkpDQp7DQpjW3ggKiBjTGVuWSArIG51bTJdLnggPSBjdUNhYnNmKGFbeCAqIGFMZW5ZICsgbnVtMl0pOw0KY1t4ICogY0xlblkgKyBudW0yXS55ID0geGYueTsNCm51bTIrKzsNCn0NCn0NCg0KDQo=</CudaSourceCode>
  <PTXMODULE Platform="x86">
    <PTX></PTX>
  </PTXMODULE>
  <Functions>
    <CudafyKernelMethod Name="complexAdd" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersF</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexSub" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersF</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexMpy" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersF</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexDiv" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersF</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexAbs" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersF</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexF[,]" Name="c" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types />
</CudafyModule>