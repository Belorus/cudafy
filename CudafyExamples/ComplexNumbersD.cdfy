<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.0.4106.18924" Name="ComplexNumbersD" HasCudaSourceCode="true" HasPTX="true">
  <CudaSourceCode>I2luY2x1ZGUgPGN1Q29tcGxleC5oPg0KDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleEFkZChjdURvdWJsZUNvbXBsZXggICphLCBpbnQgYUxlblgsIGludCBhTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RG91YmxlQ29tcGxleCAgKmMsIGludCBjTGVuWCwgaW50IGNMZW5ZKTsNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4U3ViKGN1RG91YmxlQ29tcGxleCAgKmEsIGludCBhTGVuWCwgaW50IGFMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpiLCBpbnQgYkxlblgsIGludCBiTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpOw0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgIGNvbXBsZXhNcHkoY3VEb3VibGVDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RG91YmxlQ29tcGxleCAgKmIsIGludCBiTGVuWCwgaW50IGJMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpjLCBpbnQgY0xlblgsIGludCBjTGVuWSk7DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleERpdihjdURvdWJsZUNvbXBsZXggICphLCBpbnQgYUxlblgsIGludCBhTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RG91YmxlQ29tcGxleCAgKmMsIGludCBjTGVuWCwgaW50IGNMZW5ZKTsNCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4QWJzKGN1RG91YmxlQ29tcGxleCAgKmEsIGludCBhTGVuWCwgaW50IGFMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpjLCBpbnQgY0xlblgsIGludCBjTGVuWSk7DQoNCg0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgIGNvbXBsZXhBZGQoY3VEb3VibGVDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RG91YmxlQ29tcGxleCAgKmIsIGludCBiTGVuWCwgaW50IGJMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpjLCBpbnQgY0xlblgsIGludCBjTGVuWSkNCnsNCmludCAgeCA9IGJsb2NrSWR4Lng7DQpmb3IoaW50ICBpID0gMDsgKGkgPCAweDEwMCk7IGkrKykNCnsNCmNbeCAqIGNMZW5ZICsgaV0gPSBjdUNhZGQoYVt4ICogYUxlblkgKyBpXSwgYlt4ICogYkxlblkgKyBpXSk7DQp9DQp9DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleFN1YihjdURvdWJsZUNvbXBsZXggICphLCBpbnQgYUxlblgsIGludCBhTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYiwgaW50IGJMZW5YLCBpbnQgYkxlblksIGN1RG91YmxlQ29tcGxleCAgKmMsIGludCBjTGVuWCwgaW50IGNMZW5ZKQ0Kew0KaW50ICB4ID0gYmxvY2tJZHgueDsNCmZvcihpbnQgIGkgPSAwOyAoaSA8IDB4MTAwKTsgaSsrKQ0Kew0KY1t4ICogY0xlblkgKyBpXSA9IGN1Q3N1YihhW3ggKiBhTGVuWSArIGldLCBiW3ggKiBiTGVuWSArIGldKTsNCn0NCn0NCmV4dGVybiAiQyIgX19nbG9iYWxfXyB2b2lkICBjb21wbGV4TXB5KGN1RG91YmxlQ29tcGxleCAgKmEsIGludCBhTGVuWCwgaW50IGFMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpiLCBpbnQgYkxlblgsIGludCBiTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldID0gY3VDbXVsKGFbeCAqIGFMZW5ZICsgaV0sIGJbeCAqIGJMZW5ZICsgaV0pOw0KfQ0KfQ0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgIGNvbXBsZXhEaXYoY3VEb3VibGVDb21wbGV4ICAqYSwgaW50IGFMZW5YLCBpbnQgYUxlblksIGN1RG91YmxlQ29tcGxleCAgKmIsIGludCBiTGVuWCwgaW50IGJMZW5ZLCBjdURvdWJsZUNvbXBsZXggICpjLCBpbnQgY0xlblgsIGludCBjTGVuWSkNCnsNCmludCAgeCA9IGJsb2NrSWR4Lng7DQpmb3IoaW50ICBpID0gMDsgKGkgPCAweDEwMCk7IGkrKykNCnsNCmNbeCAqIGNMZW5ZICsgaV0gPSBjdUNkaXYoYVt4ICogYUxlblkgKyBpXSwgYlt4ICogYkxlblkgKyBpXSk7DQp9DQp9DQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgY29tcGxleEFicyhjdURvdWJsZUNvbXBsZXggICphLCBpbnQgYUxlblgsIGludCBhTGVuWSwgY3VEb3VibGVDb21wbGV4ICAqYywgaW50IGNMZW5YLCBpbnQgY0xlblkpDQp7DQppbnQgIHggPSBibG9ja0lkeC54Ow0KZm9yKGludCAgaSA9IDA7IChpIDwgMHgxMDApOyBpKyspDQp7DQpjW3ggKiBjTGVuWSArIGldLnggPSBjdUNhYnMoYVt4ICogYUxlblkgKyBpXSk7DQpjW3ggKiBjTGVuWSArIGldLnkgPSAwOw0KfQ0KfQ0KDQoNCg==</CudaSourceCode>
  <PTXMODULE Platform="x86">
    <PTX></PTX>
  </PTXMODULE>
  <Functions>
    <CudafyKernelMethod Name="complexAdd" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersD</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexSub" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersD</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexMpy" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersD</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexDiv" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersD</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="b" Position="2" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="c" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="complexAbs" Type="Global" IsDummy="false">
      <Type>CudafyExamples.Complex.ComplexNumbersD</Type>
      <Assembly>CudafyExamples, Version=1.0.4106.19400, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyExamples</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyExamples\bin\Debug\CudafyExamples.exe</AssemblyPath>
      <Checksum>1233940408</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="a" Position="1" />
        <Parameter Type="Cudafy.Types.ComplexD[,]" Name="c" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types />
</CudafyModule>