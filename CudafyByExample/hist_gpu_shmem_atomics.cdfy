<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.0.4106.18924" Name="cudafymodule" HasCudaSourceCode="true" HasPTX="true">
  <CudaSourceCode>I2luY2x1ZGUgPGN1Q29tcGxleC5oPg0KZXh0ZXJuICJDIiBfX2dsb2JhbF9fIHZvaWQgIGhpc3RvX2tlcm5lbCh1bnNpZ25lZCBjaGFyICAqYnVmZmVyLCBpbnQgYnVmZmVyTGVuWCwgbG9uZyAgc2l6ZSwgdW5zaWduZWQgaW50ICAqaGlzdG8sIGludCBoaXN0b0xlblgpOw0KDQpleHRlcm4gIkMiIF9fZ2xvYmFsX18gdm9pZCAgaGlzdG9fa2VybmVsKHVuc2lnbmVkIGNoYXIgICpidWZmZXIsIGludCBidWZmZXJMZW5YLCBsb25nICBzaXplLCB1bnNpZ25lZCBpbnQgICpoaXN0bywgaW50IGhpc3RvTGVuWCkNCnsNCiAgICBfX3NoYXJlZF9fIHVuc2lnbmVkIGludCB0ZW1wWzB4MTAwXTsNCiAgICB0ZW1wW3RocmVhZElkeC54XSA9IDA7DQogICAgX19zeW5jdGhyZWFkcygpOw0KICAgIGludCAgaSA9ICh0aHJlYWRJZHgueCArIChibG9ja0lkeC54ICogYmxvY2tEaW0ueCkpOw0KICAgIGludCAgc3RyaWRlID0gKGJsb2NrRGltLnggKiBncmlkRGltLngpOw0KICAgIHdoaWxlICgoaSA8IHNpemUpKQ0KICAgIHsNCiAgICAgICAgYXRvbWljQWRkKCZ0ZW1wW2J1ZmZlcltpXV0sIDEpOw0KICAgICAgICBpICs9IHN0cmlkZTsNCiAgICB9DQogICAgX19zeW5jdGhyZWFkcygpOw0KICAgIGF0b21pY0FkZCgmaGlzdG9bdGhyZWFkSWR4LnhdLCB0ZW1wW3RocmVhZElkeC54XSk7DQp9DQoNCg0K</CudaSourceCode>
  <PTXMODULE Platform="x86">
    <PTX>CS52ZXJzaW9uIDEuNA0KCS50YXJnZXQgc21fMTIsIG1hcF9mNjRfdG9fZjMyDQoJLy8gY29tcGlsZWQgd2l0aCBDOlxQcm9ncmFtIEZpbGVzICh4ODYpXE5WSURJQSBHUFUgQ29tcHV0aW5nIFRvb2xraXRcQ1VEQVx2My4yXGJpbi8uLi9vcGVuNjQvbGliLy9iZS5leGUNCgkvLyBudm9wZW5jYyAzLjIgYnVpbHQgb24gMjAxMC0xMS0wNg0KDQoJLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vIENvbXBpbGluZyBDOi9Vc2Vycy9OaWNrL0FwcERhdGEvTG9jYWwvVGVtcC90bXB4ZnRfMDAwMDFiOTBfMDAwMDAwMDAtMTFfQ1VEQUZZU09VUkNFVEVNUC5jcHAzLmkgKEM6L1VzZXJzL05pY2svQXBwRGF0YS9Mb2NhbC9UZW1wL2NjQkkjLmEwMzkwNCkNCgkvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCgkvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gT3B0aW9uczoNCgkvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gIFRhcmdldDpwdHgsIElTQTpzbV8xMiwgRW5kaWFuOmxpdHRsZSwgUG9pbnRlciBTaXplOjMyDQoJLy8gIC1PMwkoT3B0aW1pemF0aW9uIGxldmVsKQ0KCS8vICAtZzAJKERlYnVnIGxldmVsKQ0KCS8vICAtbTIJKFJlcG9ydCBhZHZpc29yaWVzKQ0KCS8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCg0KCS5maWxlCTEJIkM6L1VzZXJzL05pY2svQXBwRGF0YS9Mb2NhbC9UZW1wL3RtcHhmdF8wMDAwMWI5MF8wMDAwMDAwMC0xMF9DVURBRllTT1VSQ0VURU1QLmN1ZGFmZTIuZ3B1Ig0KCS5maWxlCTIJImM6XFByb2dyYW0gRmlsZXMgKHg4NilcTWljcm9zb2Z0IFZpc3VhbCBTdHVkaW8gOS4wXFZDXElOQ0xVREVcY3J0ZGVmcy5oIg0KCS5maWxlCTMJIkM6XFByb2dyYW0gRmlsZXMgKHg4NilcTlZJRElBIEdQVSBDb21wdXRpbmcgVG9vbGtpdFxDVURBXHYzLjJcYmluLy4uL2luY2x1ZGVcY3J0L2RldmljZV9ydW50aW1lLmgiDQoJLmZpbGUJNAkiQzpcUHJvZ3JhbSBGaWxlcyAoeDg2KVxOVklESUEgR1BVIENvbXB1dGluZyBUb29sa2l0XENVREFcdjMuMlxiaW4vLi4vaW5jbHVkZVxob3N0X2RlZmluZXMuaCINCgkuZmlsZQk1CSJDOlxQcm9ncmFtIEZpbGVzICh4ODYpXE5WSURJQSBHUFUgQ29tcHV0aW5nIFRvb2xraXRcQ1VEQVx2My4yXGJpbi8uLi9pbmNsdWRlXGJ1aWx0aW5fdHlwZXMuaCINCgkuZmlsZQk2CSJjOlxwcm9ncmFtIGZpbGVzICh4ODYpXG52aWRpYSBncHUgY29tcHV0aW5nIHRvb2xraXRcY3VkYVx2My4yXGluY2x1ZGVcZGV2aWNlX3R5cGVzLmgiDQoJLmZpbGUJNwkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXGRyaXZlcl90eXBlcy5oIg0KCS5maWxlCTgJImM6XHByb2dyYW0gZmlsZXMgKHg4NilcbnZpZGlhIGdwdSBjb21wdXRpbmcgdG9vbGtpdFxjdWRhXHYzLjJcaW5jbHVkZVxzdXJmYWNlX3R5cGVzLmgiDQoJLmZpbGUJOQkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHRleHR1cmVfdHlwZXMuaCINCgkuZmlsZQkxMAkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHZlY3Rvcl90eXBlcy5oIg0KCS5maWxlCTExCSJjOlxwcm9ncmFtIGZpbGVzICh4ODYpXG52aWRpYSBncHUgY29tcHV0aW5nIHRvb2xraXRcY3VkYVx2My4yXGluY2x1ZGVcYnVpbHRpbl90eXBlcy5oIg0KCS5maWxlCTEyCSJjOlxwcm9ncmFtIGZpbGVzICh4ODYpXG52aWRpYSBncHUgY29tcHV0aW5nIHRvb2xraXRcY3VkYVx2My4yXGluY2x1ZGVcaG9zdF9kZWZpbmVzLmgiDQoJLmZpbGUJMTMJIkM6XFByb2dyYW0gRmlsZXMgKHg4NilcTlZJRElBIEdQVSBDb21wdXRpbmcgVG9vbGtpdFxDVURBXHYzLjJcYmluLy4uL2luY2x1ZGVcZGV2aWNlX2xhdW5jaF9wYXJhbWV0ZXJzLmgiDQoJLmZpbGUJMTQJImM6XHByb2dyYW0gZmlsZXMgKHg4NilcbnZpZGlhIGdwdSBjb21wdXRpbmcgdG9vbGtpdFxjdWRhXHYzLjJcaW5jbHVkZVxjcnRcc3RvcmFnZV9jbGFzcy5oIg0KCS5maWxlCTE1CSJjOlxQcm9ncmFtIEZpbGVzICh4ODYpXE1pY3Jvc29mdCBWaXN1YWwgU3R1ZGlvIDkuMFxWQ1xJTkNMVURFXHRpbWUuaCINCgkuZmlsZQkxNgkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHNtXzExX2F0b21pY19mdW5jdGlvbnMuaCINCgkuZmlsZQkxNwkiQzpcUHJvZ3JhbSBGaWxlcyAoeDg2KVxOVklESUEgR1BVIENvbXB1dGluZyBUb29sa2l0XENVREFcdjMuMlxiaW4vLi4vaW5jbHVkZVxjb21tb25fZnVuY3Rpb25zLmgiDQoJLmZpbGUJMTgJImM6XHByb2dyYW0gZmlsZXMgKHg4NilcbnZpZGlhIGdwdSBjb21wdXRpbmcgdG9vbGtpdFxjdWRhXHYzLjJcaW5jbHVkZVxtYXRoX2Z1bmN0aW9ucy5oIg0KCS5maWxlCTE5CSJjOlxwcm9ncmFtIGZpbGVzICh4ODYpXG52aWRpYSBncHUgY29tcHV0aW5nIHRvb2xraXRcY3VkYVx2My4yXGluY2x1ZGVcbWF0aF9jb25zdGFudHMuaCINCgkuZmlsZQkyMAkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXGRldmljZV9mdW5jdGlvbnMuaCINCgkuZmlsZQkyMQkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHNtXzEyX2F0b21pY19mdW5jdGlvbnMuaCINCgkuZmlsZQkyMgkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHNtXzEzX2RvdWJsZV9mdW5jdGlvbnMuaCINCgkuZmlsZQkyMwkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHNtXzIwX2F0b21pY19mdW5jdGlvbnMuaCINCgkuZmlsZQkyNAkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHNtXzIwX2ludHJpbnNpY3MuaCINCgkuZmlsZQkyNQkiYzpccHJvZ3JhbSBmaWxlcyAoeDg2KVxudmlkaWEgZ3B1IGNvbXB1dGluZyB0b29sa2l0XGN1ZGFcdjMuMlxpbmNsdWRlXHN1cmZhY2VfZnVuY3Rpb25zLmgiDQoJLmZpbGUJMjYJImM6XHByb2dyYW0gZmlsZXMgKHg4NilcbnZpZGlhIGdwdSBjb21wdXRpbmcgdG9vbGtpdFxjdWRhXHYzLjJcaW5jbHVkZVx0ZXh0dXJlX2ZldGNoX2Z1bmN0aW9ucy5oIg0KCS5maWxlCTI3CSJjOlxwcm9ncmFtIGZpbGVzICh4ODYpXG52aWRpYSBncHUgY29tcHV0aW5nIHRvb2xraXRcY3VkYVx2My4yXGluY2x1ZGVcbWF0aF9mdW5jdGlvbnNfZGJsX3B0eDEuaCINCgkuZmlsZQkyOAkiQzovU2FuZGJveC9IeWJyaWREU1BTeXN0ZW1zL0N1ZGFmeS9DVURBZnlFeHByZXNzL1NhbXBsZXMvQ3VkYWZ5QnlFeGFtcGxlL2Jpbi9EZWJ1Zy9DVURBRllTT1VSQ0VURU1QLmN1Ig0KDQoNCgkuZW50cnkgaGlzdG9fa2VybmVsICgNCgkJLnBhcmFtIC51MzIgX19jdWRhcGFybV9oaXN0b19rZXJuZWxfYnVmZmVyLA0KCQkucGFyYW0gLnMzMiBfX2N1ZGFwYXJtX2hpc3RvX2tlcm5lbF9idWZmZXJMZW5YLA0KCQkucGFyYW0gLnMzMiBfX2N1ZGFwYXJtX2hpc3RvX2tlcm5lbF9zaXplLA0KCQkucGFyYW0gLnUzMiBfX2N1ZGFwYXJtX2hpc3RvX2tlcm5lbF9oaXN0bywNCgkJLnBhcmFtIC5zMzIgX19jdWRhcGFybV9oaXN0b19rZXJuZWxfaGlzdG9MZW5YKQ0KCXsNCgkucmVnIC51MTYgJXJoPDY+Ow0KCS5yZWcgLnUzMiAlcjwyMj47DQoJLnJlZyAucHJlZCAlcDw0PjsNCgkuc2hhcmVkIC5hbGlnbiA0IC5iOCBfX2N1ZGFfX19jdWRhX2xvY2FsX3Zhcl84MTAxMl80MV9ub25fY29uc3RfdGVtcDIwWzEwMjRdOw0KCS5sb2MJMjgJNAkwDQokTERXYmVnaW5faGlzdG9fa2VybmVsOg0KCW1vdi51MzIgCSVyMSwgX19jdWRhX19fY3VkYV9sb2NhbF92YXJfODEwMTJfNDFfbm9uX2NvbnN0X3RlbXAyMDsNCgkubG9jCTI4CTcJMA0KCWN2dC51MzIudTE2IAklcjIsICV0aWQueDsNCgltdWwyNC5sby51MzIgCSVyMywgJXIyLCA0Ow0KCWFkZC51MzIgCSVyNCwgJXIzLCAlcjE7DQoJbW92LnUzMiAJJXI1LCAwOw0KCXN0LnNoYXJlZC51MzIgCVslcjQrMF0sICVyNTsNCgkubG9jCTI4CTgJMA0KCWJhci5zeW5jIAkwOw0KCS5sb2MJMjgJMTAJMA0KCW1vdi51MTYgCSVyaDEsICVudGlkLng7DQoJbW92LnUxNiAJJXJoMiwgJWN0YWlkLng7DQoJbXVsLndpZGUudTE2IAklcjYsICVyaDIsICVyaDE7DQoJYWRkLnUzMiAJJXI3LCAlcjYsICVyMjsNCglsZC5wYXJhbS5zMzIgCSVyOCwgW19fY3VkYXBhcm1faGlzdG9fa2VybmVsX3NpemVdOw0KCXNldHAubGUuczMyIAklcDEsICVyOCwgJXI3Ow0KCUAlcDEgYnJhIAkkTHRfMF8xMjgyOw0KCWxkLnBhcmFtLnUzMiAJJXI5LCBbX19jdWRhcGFybV9oaXN0b19rZXJuZWxfYnVmZmVyXTsNCglhZGQudTMyIAklcjEwLCAlcjcsICVyOTsNCglsZC5wYXJhbS5zMzIgCSVyOCwgW19fY3VkYXBhcm1faGlzdG9fa2VybmVsX3NpemVdOw0KCWFkZC51MzIgCSVyMTEsICVyOCwgJXI5Ow0KCW1vdi51MTYgCSVyaDMsICVuY3RhaWQueDsNCgltdWwud2lkZS51MTYgCSVyMTIsICVyaDMsICVyaDE7DQokTHRfMF8xNzk0Og0KIC8vPGxvb3A+IExvb3AgYm9keSBsaW5lIDEwLCBuZXN0aW5nIGRlcHRoOiAxLCBlc3RpbWF0ZWQgaXRlcmF0aW9uczogdW5rbm93bg0KCS5sb2MJMTYJMTA5CTANCglsZC5nbG9iYWwudTggCSVyaDQsIFslcjEwKzBdOw0KCW11bC53aWRlLnUxNiAJJXIxMywgJXJoNCwgNDsNCglhZGQudTMyIAklcjE0LCAlcjEsICVyMTM7DQoJbW92LnUzMiAJJXIxNSwgMTsNCglhdG9tLnNoYXJlZC5hZGQudTMyIAklcjE2LCBbJXIxNF0sICVyMTU7DQoJYWRkLnUzMiAJJXIxMCwgJXIxMCwgJXIxMjsNCglzZXRwLmx0LnMzMiAJJXAyLCAlcjEwLCAlcjExOw0KCUAlcDIgYnJhIAkkTHRfMF8xNzk0Ow0KJEx0XzBfMTI4MjoNCgkubG9jCTI4CTE2CTANCgliYXIuc3luYyAJMDsNCgkubG9jCTE2CTEwOQkwDQoJbGQucGFyYW0udTMyIAklcjE3LCBbX19jdWRhcGFybV9oaXN0b19rZXJuZWxfaGlzdG9dOw0KCWFkZC51MzIgCSVyMTgsICVyMTcsICVyMzsNCglsZC5zaGFyZWQudTMyIAklcjE5LCBbJXI0KzBdOw0KCWF0b20uZ2xvYmFsLmFkZC51MzIgCSVyMjAsIFslcjE4XSwgJXIxOTsNCgkubG9jCTI4CTE4CTANCglleGl0Ow0KJExEV2VuZF9oaXN0b19rZXJuZWw6DQoJfSAvLyBoaXN0b19rZXJuZWwNCg0K</PTX>
  </PTXMODULE>
  <Functions>
    <CudafyKernelMethod Name="histo_kernel" Type="Global" IsDummy="false">
      <Type>CudafyByExample.hist_gpu_shmem_atomics</Type>
      <Assembly>CudafyByExample, Version=1.0.4106.19085, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>CudafyByExample</AssemblyName>
      <AssemblyPath>C:\Sandbox\HybridDSPSystems\Cudafy\CUDAfyExpress\Samples\CudafyByExample\bin\Debug\CudafyByExample.exe</AssemblyPath>
      <Checksum>2562883757</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="thread" Position="0" />
        <Parameter Type="System.Byte[]" Name="buffer" Position="1" />
        <Parameter Type="System.Int64" Name="size" Position="2" />
        <Parameter Type="System.UInt32[]" Name="histo" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types />
</CudafyModule>